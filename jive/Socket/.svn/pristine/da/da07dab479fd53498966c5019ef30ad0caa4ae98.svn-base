static const char *RcsId = "$Header: /users/chaize/newsvn/cvsroot/Communication/Socket/src/SocketStateMachine.cpp,v 1.1.1.1 2007-01-12 10:07:44 pascal_verdier Exp $";
//+=============================================================================
//
// file :         SocketStateMachine.cpp
//
// description :  C++ source for the Socket and its alowed. 
//                method for commands and attributes
//
// project :      TANGO Device Server
//
// $Author: pascal_verdier $
//
// $Revision: 1.1.1.1 $
//
// $Log: not supported by cvs2svn $
// Revision 1.4  2005/12/07 08:04:50  bourtemb
// Readln and ReadUntil commands not allowed when in OFF state
//
// Revision 1.3  2005/10/04 13:51:35  peru
// Implemented "ReadUntil" command.
// Re-organization of the code.
//
// Revision 1.2  2005/09/05 13:42:21  peru
// Added "Readln" command.
//
// Revision 1.1.1.1  2005/07/12 06:59:46  peru
// Imported using TkCVS
//
// Revision 1.1.1.1  2005/07/12 06:16:03  peru
// Imported using TkCVS
//
//
// copyleft :     European Synchrotron Radiation Facility
//                BP 220, Grenoble 38043
//                FRANCE
//
//-=============================================================================
//
//  		This file is generated by POGO
//	(Program Obviously used to Generate tango Object)
//
//         (c) - Software Engineering Group - ESRF
//=============================================================================

#include <tango.h>
#include <Socket.h>
#include <SocketClass.h>

/*====================================================================
 *	This file contains the methods to allow commands and attributes
 * read or write execution.
 *
 * If you wand to add your own code, add it between 
 * the "End/Re-Start of Generated Code" comments.
 *
 * If you want, you can also add your own methods.
 *====================================================================
 */

namespace Socket_ns
{

//=================================================
//		Attributes Allowed Methods
//=================================================


//=================================================
//		Commands Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		Socket::is_Write_allowed
// 
// description : 	Execution allowed for Write command.
//
//-----------------------------------------------------------------------------
bool Socket::is_Write_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::OFF)
	{
		//	End of Generated Code
		if (autoReconnect)
			return true;
		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Socket::is_Read_allowed
// 
// description : 	Execution allowed for Read command.
//
//-----------------------------------------------------------------------------
bool Socket::is_Read_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::OFF)
	{
		//	End of Generated Code
		if (autoReconnect)
			return true;
		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Socket::is_Reconnect_allowed
// 
// description : 	Execution allowed for Reconnect command.
//
//-----------------------------------------------------------------------------
bool Socket::is_Reconnect_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::ON)
	{
		//	End of Generated Code
		if (autoReconnect)
			return true;
		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Socket::is_WriteAndRead_allowed
// 
// description : 	Execution allowed for WriteAndRead command.
//
//-----------------------------------------------------------------------------
bool Socket::is_WriteAndRead_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::OFF)
	{
		//	End of Generated Code
		if (autoReconnect)
			return true;
		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Socket::is_Readln_allowed
// 
// description : 	Execution allowed for Readln command.
//
//-----------------------------------------------------------------------------
bool Socket::is_Readln_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::OFF)
	{
		//	End of Generated Code
		if (autoReconnect)
			return true;
		//	Re-Start of Generated Code
		return false;
	}
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		Socket::is_ReadUntil_allowed
// 
// description : 	Execution allowed for ReadUntil command.
//
//-----------------------------------------------------------------------------
bool Socket::is_ReadUntil_allowed(const CORBA::Any &any)
{
	if (get_state() == Tango::OFF)
	{
		//	End of Generated Code
		if (autoReconnect)
			return true;
		//	Re-Start of Generated Code
		return false;
	}
	return true;
}

}	// namespace Socket_ns
